Manage Applications Capability
The "Manage Applications" capability allows users to manage different aspects of customer applications, including creating, updating, and canceling prospects for specific services. This capability is built to support the journey types "BPLUS" and "YPA" with flexible handling for different application statuses. It provides various endpoints to interact with and retrieve application data based on customer or prospect IDs.

Application Management P-API
The Application Management P-API (Public API) is the core API that supports application management operations, including retrieval, creation, and update of application and prospect data. Below are the main endpoints available under this API and their respective functions:

Application Management P-API
1. GET /applications?journeyType=BPLUS,YPA&&status=ACTIVE,COMPLETED,CANCELLED,EXPIRED
Purpose: Retrieves a list of applications based on the specified journey types and statuses.
Query Parameters:
journeyType: Type of application journey (e.g., BPLUS, YPA).
status: Application status filter (ACTIVE, COMPLETED, CANCELLED, or EXPIRED).
Response Scenarios:
Applications Found:
Returns a list of applications that match the specified criteria.
Fields in Response:
status: Current status of the application.
introducerCustomerId: Unique ID of the introducer customer.
productPseudoCode: Code representing the product.
prospectId: Unique identifier for the prospect.
customerId: Unique identifier for the customer.
prospectResumeStatus: Current status of the prospect's resume.
prospectCreateDate: Date when the prospect was created.
Applications Not Found:
Returns a meta code with "No records found" (Code: NAPP100).
2. GET /prospects/{prospectId}
Purpose: Retrieves details of a specific prospect based on their prospectId.
Response Scenarios:
Prospect Found:
Returns detailed information about the prospect.
Fields in Response:
partyId: Unique ID associated with the party.
applicationReferenceNumber: Application reference number.
prospectDetails: Detailed information about the prospect.
ocrConfirmed: Status of OCR confirmation.
contactDetails: Contact information, such as mobile number and email.
marketingPreferences: Preferences for marketing communication (e.g., SMS, email).
channelType: The channel used for application (e.g., BMBBPLUS).
prospectStatus, customerStatus, resumeStatus, and applicationStatus: Various statuses of the prospect's journey.
introducerEligibilityStatus: Eligibility status of the introducer.
Prospect Not Found:
Returns a meta code indicating "No records found" (Code: NAPP100).
3. POST /prospects
Purpose: Creates a new prospect for the specified journey type.
Request Body:
Required fields include journeyType, notificationType, issuedDate, expiryDate, tokenId, and tokenStatus.
Response Scenarios:
Prospect Creation Success (Without Push Notification):
Returns a meta code "SUCCESS" with "Prospect Created" and data including prospectId and applicationReferenceNumber.
Prospect Creation Success (With Push Notification):
Similar response as above, with added push notification details.
Technical Exception:
Returns an error object with specific errorCodes in case of failure.
4. PATCH /prospects/{prospectId}
Purpose: Updates the status of an existing prospect identified by prospectId.
Request Body:
Required fields include journeyType, applicationReferenceNumber, and prospectStatus.
Response Scenarios:
Update Prospect with Status "In-Progress":
No content is returned for this scenario.
Failure due to Decision "In-Progress":
If the decision is "In-Progress," returns a meta code "FAILURE" with "We Can't Close Prospect" (Code: DECINP100).
Failure due to Customer "CREATED":
If customer status is "CREATED," returns a meta code "FAILURE" with "We Can't Close Prospect" (Code: ACC100).
5. API Headers and Body Requirements
Headers:
Content-Type: Must be application/json (mandatory).
Correlation-ID: Unique request identifier (mandatory).
System-Id: Identifier for the system initiating the request, e.g., BMBBPLUS (mandatory).
Authorization: Authorization token (mandatory).
Customer-Id: Unique customer identifier (mandatory).
Request Body Fields:
journeyType (mandatory).
applicationReferenceNumber (optional).
Additional fields for POST and PATCH requests, depending on notification and token details.
6. Response Codes and Metadata
Success Codes:
200-OK: For successful retrieval.
201-Created: For successful creation.
Error Codes:
500-Internal Server Error: For technical issues.
Meta Codes:
NAPP100: No records found.
APPEXP01: Prospect expired.
DECINP100: Decision in progress, cannot close prospect.
ACC100: Customer created, cannot close prospect.
